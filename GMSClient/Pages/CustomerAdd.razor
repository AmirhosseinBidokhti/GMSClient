@page "/customeradd"
@layout MainLayout

@inject NavigationManager navigationManager
@inject StateContainer stateContainer


<h3>ایجاد مشتری جدید</h3>
<center>
    <EditForm Model="@customer" OnValidSubmit="CreateCustomer">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div>
            <br />
        </div>
        <div class="col-12 row">
            <input class="form-control col-12" @bind="customer.FirstName" placeholder="نام" />
        </div>
        <br />
        <div class="col-12 row">
            <input class="form-control col-12" @bind="customer.LastName" placeholder="نام خانوادگی" />
        </div>
        <br />
        <div class="col-12 row">
            <input class="form-control col-12 masked" @bind="customer.BirthDateFa" placeholder="تاریخ تولد مثلا 1365/06/25" pattern="[0-9]{4}/(0[1-9]|1[012])/(0[1-9]|1[0-9]|2[0-9]|3[01])" data-valid-example="1365/05/30" />
        </div>
        <br />
        <div class="col-12 row">
            <input type="number" class="form-control col-12" @bind="customer.Mobile" placeholder="موبایل" />
        </div>
        <br />
        <div class="col-12 row">
            <input class="form-control col-12" @bind="customer.Address" placeholder="آدرس" />
        </div>
        <br />
        <div class="col-12 row">
            <input class="form-control col-12" @bind="customer.Email" placeholder="ایمیل" />
        </div>
        <br />
        <div class="col-12 row">
            <input class="form-control col-12" @bind="customer.Tel" placeholder="تلفن" />
        </div>
        <br />
        <div class="col-12 row">
            <input class="form-control col-12" @bind="customer.PostalCode" placeholder="کد پستی" />
        </div>
        <br />
        <div class="col-12 row">
            <input class="form-control col-12" @bind="customer.Instagram" placeholder="اینستاگرام" />
        </div>
        <br />
        <div class="col-12 row">
            <input class="form-control col-12" @bind="customer.Telegram" placeholder="تلگرام" />
        </div>
        <br />
        <div class="col-12 row">
            <input type="checkbox" class="form-control col-12" @bind="customer.Gender" value="مرد؟" />
        </div>
        <br />
        <div class="form-group row">
            <div class="col-sm-10">
                <InputSelect @bind-Value="customer.JobTitle" class="form-control">
                    @foreach (var dept in generalDDEntity.Where(l => l.Type.ToLower() == "jobinfo").ToList())
                    {
                        <option value="@dept.Title">@dept.Title</option>
                    }
                </InputSelect>
            </div>
            <label for="department" class="col-sm-2 col-form-label">
                شغل
            </label>
        </div>
        <br />
        <div class="form-group row">
            <div class="col-sm-10">
                <InputSelect @bind-Value="customer.MembershipJoinTypeTitle" class="form-control">
                    @foreach (var dept in generalDDEntity.Where(l => l.Type.ToLower() == "membershipjointype").ToList())
                    {
                        <option value="@dept.Title">@dept.Title</option>
                    }
                </InputSelect>
            </div>
            <label for="department" class="col-sm-2 col-form-label">
                نحوه آشنایی
            </label>
        </div>
        
        <br />
        <div class="col-12 row">
            <input type="submit" class="form-control col-12 btn btn-primary" value="ثبت" />
        </div>
        <div class="col-12 row">
            <button type="button" class="form-control col-12 btn btn-primary" value="انصراف" @onclick="Cancel">انصراف</button>
        </div>
        <br />
        <div class="col-12 row" style="text-align:left; font-weight:bold">
            <span class="col-12">@BackendMesssage</span>
        </div>
    </EditForm>
</center>



@code {
    private Customer customer;
    public string BackendMesssage { get; set; }
    private GeneralDDEntity[] generalDDEntity;

    protected async override Task OnInitializedAsync()
    {
        customer = new Customer();
        if (string.IsNullOrWhiteSpace(stateContainer.Token))
        {
            navigationManager.NavigateTo("/");
        }

        var data = BackendEngine.Call("ClientCreateAllDL", "{}", stateContainer.Token);


        var msg = data.GetBackendErrorMsg();
        if (msg.Length > 0)
            BackendMesssage = msg;
        else
            generalDDEntity = JsonConvert.DeserializeObject<GeneralDDEntity[]>(data);
    }

    private async void Cancel()
    {
        navigationManager.NavigateTo("/customers");
    }

    private async Task<bool> CreateCustomer()
    {

        customer.JobID = generalDDEntity.Where(l => l.Type.ToLower() == "jobinfo" && l.Title == customer.JobTitle).FirstOrDefault()?.ID;
        customer.MembershipJoinTypeID = generalDDEntity.Where(l => l.Type.ToLower() == "membershipjointype" && l.Title == customer.MembershipJoinTypeTitle).FirstOrDefault()?.ID;

        var jsondata = JsonConvert.SerializeObject(customer);

        var data = BackendEngine.Call("ClientUpdate", jsondata, stateContainer.Token);

        var msg = data.GetBackendErrorMsg();
        if (msg.Length > 0)
            BackendMesssage = msg;
        else
            navigationManager.NavigateTo("/customers");

        return await Task.FromResult(true);
    }
}
